<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<!-- Media: Watched status indicator -->
	<variable name="Colour_WatchedStatusColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>ff6db9e5</value>
	</variable>

	<!-- General: Theme Colour -->
	<variable name="Colour_ThemeColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.OSDThemeColour)) + [Window.IsActive(2006) | Window.IsActive(FullScreenVideo)]">$INFO[Skin.String(Colour.OSDThemeColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>ff6db9e5</value>
	</variable>
	
	<!-- Views: List Theme Colour -->
	<variable name="Colour_ListThemeColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.ListThemeColour))">$INFO[Skin.String(Colour.ListThemeColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Views: List Highlight Colour -->
	<variable name="Colour_ListHighlightColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.ListHighlightColour))">$INFO[Skin.String(Colour.ListHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Views: List Watched Status Colour -->
	<variable name="Colour_ListWatchedStatusColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.ListWatchedStatusColour))">$INFO[Skin.String(Colour.ListWatchedStatusColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Views: InfoWall Theme Colour -->
	<variable name="Colour_InfoWallThemeColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.InfoWallThemeColour))">$INFO[Skin.String(Colour.InfoWallThemeColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Views: InfoWall Highlight Colour -->
	<variable name="Colour_InfoWallHighlightColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.InfoWallHighlightColour))">$INFO[Skin.String(Colour.InfoWallHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Views: InfoWall Watched Status Colour -->
	<variable name="Colour_InfoWallWatchedStatusColourVar">
		<value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.InfoWallWatchedStatusColour))">$INFO[Skin.String(Colour.InfoWallWatchedStatusColour)]</value>
		<value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
		<value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value condition="Control.IsVisible(500) + Container.Content(episodes)">grey2</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Views: Landscape Theme Colour -->
	<variable name="Colour_LandscapeThemeColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.LandscapeThemeColour)) + Control.IsVisible(52)">$INFO[Skin.String(Colour.LandscapeThemeColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Views: Landscape Watched Status Colour -->
	<variable name="Colour_LandscapeWatchedStatusColourVar">
		<value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.LandscapeWatchedStatusColour))">$INFO[Skin.String(Colour.LandscapeWatchedStatusColour)]</value>
		<value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
		<value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value condition="Control.IsVisible(500) + Container.Content(episodes)">grey2</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Views: Showcase Theme Colour -->
	<variable name="Colour_ShowcaseThemeColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.ShowcaseThemeColour)) + [Control.IsVisible(53) | Control.IsVisible(54)]">$INFO[Skin.String(Colour.ShowcaseThemeColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Views: Showcase Watched Status Colour -->
	<variable name="Colour_ShowcaseWatchedStatusColourVar">
		<value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.ShowcaseWatchedStatusColour))">$INFO[Skin.String(Colour.ShowcaseWatchedStatusColour)]</value>
		<value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
		<value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value condition="Control.IsVisible(500) + Container.Content(episodes)">grey2</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Views: TriPanel Theme Colour -->
	<variable name="Colour_TriPanelThemeColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.TriPanelThemeColour))">$INFO[Skin.String(Colour.TriPanelThemeColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Views: TriPanel Highlight Colour -->
	<variable name="Colour_TriPanelHighlightColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.TriPanelHighlightColour))">$INFO[Skin.String(Colour.TriPanelHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Views: TriPanel Watched Status Colour -->
	<variable name="Colour_TriPanelWatchedStatusColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.TriPanelWatchedStatusColour))">$INFO[Skin.String(Colour.TriPanelWatchedStatusColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Views: Posters Watched Status Colour -->
	<variable name="Colour_PostersWatchedStatusColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.PostersWatchedStatusColour))">$INFO[Skin.String(Colour.PostersWatchedStatusColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Views: Shift Theme Colour -->
	<variable name="Colour_ShiftThemeColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.ShiftThemeColour))">$INFO[Skin.String(Colour.ShiftThemeColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Views: Shift Watched Status Colour -->
	<variable name="Colour_ShiftWatchedStatusColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.ShiftWatchedStatusColour))">$INFO[Skin.String(Colour.ShiftWatchedStatusColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Views: BannerWall Theme Colour -->
	<variable name="Colour_BannerWallThemeColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.BannerWallThemeColour))">$INFO[Skin.String(Colour.BannerWallThemeColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Views: BannerWall Highlight Colour -->
	<variable name="Colour_BannerWallHighlightColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.BannerWallHighlightColour))">$INFO[Skin.String(Colour.BannerWallHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Views: BannerWall Watched Status Colour -->
	<variable name="Colour_BannerWallWatchedStatusColourVar">
		<value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.BannerWallWatchedStatusColour))">$INFO[Skin.String(Colour.BannerWallWatchedStatusColour)]</value>
		<value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
		<value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value condition="Control.IsVisible(500) + Container.Content(episodes)">grey2</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Views: Small Icons Theme Colour -->
	<variable name="Colour_SmallIconsThemeColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.SmallIconsThemeColour))">$INFO[Skin.String(Colour.SmallIconsThemeColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Views: Small Icons Highlight Colour -->
	<variable name="Colour_SmallIconsHighlightColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.SmallIconsHighlightColour))">$INFO[Skin.String(Colour.SmallIconsHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Views: Small Icons Watched Status Colour -->
	<variable name="Colour_SmallIconsWatchedStatusColourVar">
		<value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.SmallIconsWatchedStatusColour))">$INFO[Skin.String(Colour.SmallIconsWatchedStatusColour)]</value>
		<value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
		<value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value condition="Control.IsVisible(500) + Container.Content(episodes)">grey2</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Views: Icons Theme Colour -->
	<variable name="Colour_IconsThemeColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.IconsThemeColour))">$INFO[Skin.String(Colour.IconsThemeColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Views: Icons Highlight Colour -->
	<variable name="Colour_IconsHighlightColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.IconsHighlightColour))">$INFO[Skin.String(Colour.IconsHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Views: Icons Watched Status Colour -->
	<variable name="Colour_IconsWatchedStatusColourVar">
		<value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.IconsWatchedStatusColour))">$INFO[Skin.String(Colour.IconsWatchedStatusColour)]</value>
		<value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.WatchedStatusColour))">$INFO[Skin.String(Colour.WatchedStatusColour)]</value>
		<value condition="Skin.HasSetting(Enable.ColouredCircles) + !IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value condition="Control.IsVisible(500) + Container.Content(episodes)">grey2</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Media: TV highlight -->
	<variable name="Colour_TVHighlightColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.TVHighlightColour))">$INFO[Skin.String(Colour.TVHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Media: General highlight -->
	<variable name="Colour_GeneralHighlightColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Media: Home Movies highlight -->
	<variable name="Colour_HomeMoviesHighlightColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.HomeMoviesHighlightColour))">$INFO[Skin.String(Colour.HomeMoviesHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Media: Clips highlight -->
	<variable name="Colour_ClipsHighlightColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.ClipsHighlightColour))">$INFO[Skin.String(Colour.ClipsHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Media: Music highlight -->
	<variable name="Colour_MusicHighlightColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.MusicHighlightColour))">$INFO[Skin.String(Colour.MusicHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Media: Channels highlight -->
	<variable name="Colour_ChannelHighlightColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.ChannelHighlightColour))">$INFO[Skin.String(Colour.ChannelHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- Media: Photos highlight -->
	<variable name="Colour_PhotoHighlightColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.PhotoHighlightColour))">$INFO[Skin.String(Colour.PhotoHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.GeneralHighlightColour))">$INFO[Skin.String(Colour.GeneralHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
	<!-- OSD: Progress Bar Colour -->
	<variable name="Colour_OSDProgressBarColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.OSDProgressBarColour))">$INFO[Skin.String(Colour.OSDProgressBarColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.OSDThemeColour))">$INFO[Skin.String(Colour.OSDThemeColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>ff6db9e5</value>
	</variable>
	
	<!-- OSD: Theme Colour -->
	<variable name="Colour_OSDThemeColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.OSDThemeColour))">$INFO[Skin.String(Colour.OSDThemeColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>ff6db9e5</value>
	</variable>
	
	<!-- Home Window Theme Colour -->
	<variable name="Colour_HomeWindowThemeColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.HomeThemeColour))">$INFO[Skin.String(Colour.HomeThemeColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>ff6db9e5</value>
	</variable>
	
	<!-- Focussed Main Menu Item Colour -->
	<variable name="Colour_MainMenuFocussedColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.MainMenuFocussedColour))">$INFO[Skin.String(Colour.MainMenuFocussedColour)]</value>
		<value>FFe5e5e5</value>
	</variable>
	
	<!-- Unfocussed Main Menu Item Colour -->
	<variable name="Colour_MainMenuUnfocussedColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.MainMenuUnfocussedColour))">$INFO[Skin.String(Colour.MainMenuUnfocussedColour)]</value>
		<value>FF606060</value>
	</variable>
	
	<!-- Submenu Highlight Colour -->
	<variable name="Colour_SubmenuHighlightColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.SubmenuHighlightColour))">$INFO[Skin.String(Colour.SubmenuHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>ff6db9e5</value>
	</variable>
	
	<!-- Submenu Text Colour -->
	<variable name="Colour_SubmenuTextColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.SubmenuTextColour))">$INFO[Skin.String(Colour.SubmenuTextColour)]</value>
		<value>AAFFFFFF</value>
	</variable>
	
	<!-- Widgets: Media highlight -->
	<variable name="Colour_WidgetHighlightColourVar">
		<value condition="!IsEmpty(Skin.String(Colour.WidgetHighlightColour))">$INFO[Skin.String(Colour.WidgetHighlightColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.HomeThemeColour))">$INFO[Skin.String(Colour.HomeThemeColour)]</value>
		<value condition="!IsEmpty(Skin.String(Colour.ThemeColour))">$INFO[Skin.String(Colour.ThemeColour)]</value>
		<value>FF6db9e5</value>
	</variable>
	
</includes>
